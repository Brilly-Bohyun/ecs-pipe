version: 0.2

env:
  variables:
    AWS_ECR: 825958448855.dkr.ecr.ap-northeast-2.amazonaws.com
    IMAGE_REPO_NAME: ecspipe-image
    CONTAINER_NAME: ecspipe-container

phases:
  pre_build: #빌드 전에 할 행동
    commands:
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $AWS_ECR
      - #ECR 로그인
  build: # 빌드 명령
    commands:
      - #이미지 빌드 : build 번호를 도커이미지의 태그
      - IMAGE_TAG=CODEBUILD_BUILD_NUMBER
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ECR/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ECR/$IMAGE_REPO_NAME:latest
  post_build:
    commands:
      - # 이미지 푸시 : build 번호를 가지고 있는 이미지 푸시
      - docker push $AWS_ECR/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $AWS_ECR/$IMAGE_REPO_NAME:latest
      - #json 형태로 이미지를 지정하는 파일 생성
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $AWS_ECR/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json

artifacts: 
  files: # 빌드후에 배포단계로 옮길 파일들.
    - #이미지 정보가 담겨있는 json 파일들 지정
    - imagedefinitions.json
